@using DeliveryClub.Infrastructure.Constants
@model DeliveryClub.Web.ViewModels.Admin.Menu.ProductViewModel

@{
    ViewData["Title"] = "View";
}

<h1>Edit product</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post" enctype="multipart/form-data" asp-action="UpdateProduct" id="form-product">
            <input type="hidden" asp-for="Id" value="@Model.Id">
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" value="@Model.Name" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" value="@Model.Description" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            @if (Model.PortionPrices != null)
            {
                int i = 0;
                <div class="form-group portion-prices">
                    @foreach (var pp in Model.PortionPrices)
                    {
                        <div class="div-portion-price">
                            <input type="hidden" name="PortionPrices[@i].Id" value="@pp.Id">
                            <div class="div-portion">
                                <div class="div-portion-price-label">
                                    <label>Portion: </label>
                                </div>
                                <div class="div-portion-price-input">
                                    <input name="PortionPrices[@i].Portion" class="form-control" value="@pp.Portion">
                                </div>
                            </div>
                            <div class="div-price">
                                <div class="div-portion-price-label">
                                    <label>Price: </label>
                                </div>
                                <div class="div-portion-price-input">
                                    <input name="PortionPrices[@i].Price" class="form-control" type="number" step="any" value="@pp.Price">
                                </div>
                            </div>
                        </div>
                        i++;
                    }
                    <div class="div-buttons-portion_price" id="div-buttons-portion_price">
                        <button class="btn btn-secondary button-portion_price button-portion_price-create" onclick="createPortionPricePair_Product()" form="">Create a portion-price pair</button>
                        <button class="btn btn-secondary button-portion_price button-potrion_price-delete" onclick="deletePortionPricePair_Product()" form="">Delete a portion-price pair</button>
                    </div>
                </div>
            }
            <div class="form-group">
                <label asp-for="ProductGroupName" class="control-label">Product Group</label>
                <select asp-for="ProductGroupName" onchange="HasPortionPrices(this)" class="form-control">
                    @foreach (var opt in ViewBag.ProductGroupNames)
                    {
                        if (Model.ProductGroupName != opt)
                        {
                            <option value="@opt">@opt</option>
                        }
                        else
                        {
                            <option selected value="@opt">@opt</option>
                        }
                    }
                </select>
                <span asp-validation-for="ProductGroupName" class="text-danger"></span>
            </div>
            <div class="form-group product-uploading-image">
                <label asp-for="Image" class="col-form-label"></label>
                <div class="custom-file">
                    <input asp-for="Image" type="file" accept="image/*" onchange="onChangeImgInput()" id="product_image-input" class="custom-file-input" />
                    <label class="text-truncate custom-file-label">@Model.ImageName</label>
                    <label class="text-danger non-visible" id="file-size-error">File is too big.</label>
                </div>
            </div>
            <div class="form-group">
                @if (Model.ImageName != null)
                {
                    var imagePath = PathConstants.ImageFolder + Model.ImageName;
                    <img src="@imagePath" id="image" alt="" class="img-thumbnail" />
                }
                else
                {
                    <img src="~/resources/img/site/productLogo.png" id="product_image-img" alt="" class="img-thumbnail" />
                }
            </div>
            <div>
                @{
                    if (Model.PortionPrices.Count > 0)
                    {
                        <input type="hidden" name="ProductGroupPortionPriced" value="false">
                    }
                    else
                    {
                        <input type="hidden" name="ProductGroupPortionPriced" value="true">
                    }
                }
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Menu">Back to Menu</a>
</div>

