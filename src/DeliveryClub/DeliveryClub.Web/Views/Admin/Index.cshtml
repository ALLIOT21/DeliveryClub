@using DeliveryClub.Infrastructure.Constants
@model DeliveryClub.Web.ViewModels.Admin.Info.RestaurantInfoViewModel

    <ul class="nav nav-pills nav-fill" id="pills-tab" role="tablist">
        <li class="nav-item">
            <a class="nav-link active" href="/Admin" id="pills-info-tab" data-toggle="pill" role="tab" aria-controls="pills-home" onclick="ChangeTabs()">Info</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="/Admin/Menu" id="pills-menu-tab" data-toggle="pill" role="tab" aria-controls="pills-menu" onclick="ChangeTabs()">Menu</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="/Admin/Dispatchers" id="pills-menu-tab" data-toggle="pill" role="tab" aria-controls="pills-menu" onclick="ChangeTabs()">Dispatchers</a>
        </li>
    </ul>

<div class="tab-pane fade show active" id="pills-info" role="tabpanel">
    <form method="post" enctype="multipart/form-data" asp-action="UpdateRestaurant" id="form-update-restaurant">
        <div class="primary_info">
            <div class="info-label">
                <h2>Primary info</h2>
            </div>
            <div class="info-div">
                <div class="info-item">
                    <div class="info-item-title">
                        <h5>Name: </h5>
                    </div>
                    <div class="info-item-content">
                        <span class="is-visible inline to-edit" id="display-name">@Model.Name</span>
                        <input type="text" class="info-input non-visible to-edit" asp-for="Name" id="edit-name" />
                    </div>
                </div>
                <div class="info-item">
                    <div class="info-item-title">
                        <h5>Specializations: </h5>
                    </div>
                    <div class="info-item-content">
                        @for (int i = 0; i < Model.Specializations.Count; i++)
                        {
                            <div class="checkbox">
                                @Html.CheckBoxFor(m => m.Specializations[i].IsSelected,
                                    new
                                    {
                                        @class = "checkbox-disabled specialization",
                                        @disabled = true,
                                    })
                                @Html.LabelFor(m => m.Specializations[i].IsSelected, Model.Specializations[i].Specialization.ToString())
                                @Html.HiddenFor(m => m.Specializations[i].Specialization)
                            </div>
                        }
                    </div>
                </div>
                <div class="info-item">
                    <div class="info-item-title">
                        <h5>Delivery cost: </h5>
                    </div>
                    <div class="info-item-content">
                        <span class="is-visible inline to-edit" id="display-deliverycost">@Model.DeliveryCost</span>
                        <input type="number" class="info-input non-visible to-edit" asp-for="DeliveryCost" id="edit-deliverycost" />
                        <span>BYN</span>
                    </div>
                </div>
                <div class="info-item">
                    <div class="info-item-title">
                        <h5>Minimal order price: </h5>
                    </div>
                    <div class="info-item-content">
                        <span class="is-visible inline to-edit" id="display-minorderprice">@Model.MinimalOrderPrice</span>
                        <input type="number" class="info-input non-visible to-edit" asp-for="MinimalOrderPrice" id="edit-minorderprice" />
                        <span>BYN</span>
                    </div>
                </div>
                <div class="info-item">
                    <div class="info-item-title">
                        <h5>Cover image: </h5>
                    </div>
                    <div class="info-item-content">
                        <div class="custom-file">
                            <input asp-for="CoverImage" type="file" accept="image/*" onchange="onChangeImgInput()" id="image-input" class="custom-file-input" disabled/>
                            <label class="text-truncate custom-file-label" id="image-label">@Model.CoverImageName</label>
                        </div>
                    </div>
                    <label class="text-danger non-visible" id="file-size-error">File is too big.</label>
                </div>
                <div class="info-item last-item">
                    @if (Model.CoverImageName != null)
                    {
                        var imagePath = PathConstants.ImageFolder + Model.CoverImageName;
                        <img width="350" height="200" src="@imagePath" id="image" alt="" class="img-thumbnail" />
                    }
                    else
                    {
                        <img width="350" height="200" src="~/resources/img/no-cover.png" id="image" class="img-thumbnail"/> 
                    }
                </div>
            </div>
        </div>
        <div class="additional_info">
            <div class="info-label">
                <h2>Additional info</h2>
            </div>
            <div class="info-div">
                <div class="info-item">
                    <div class="info-item-title">
                        <h5>Description: </h5>
                    </div>
                    <div class="info-item-content">
                        <span class="is-visible inline to-edit" id="display-description">@Model.Description</span>
                        <textarea class="info-input info-textarea non-visible to-edit" asp-for="Description" id="edit-description" rows="3"></textarea>
                    </div>
                </div>
                <div class="info-item">
                    <div class="info-item-title">
                        <h5>Payment methods: </h5>
                    </div>
                    <div class="info-item-content">
                        @for (int i = 0; i < Model.PaymentMethods.Count; i++)
                        {
                            <div class="checkbox">
                                @Html.CheckBoxFor(m => m.PaymentMethods[i].IsSelected,
                                    new
                                    {
                                        @class = "checkbox-disabled payment-method",
                                        @disabled = true,
                                    })
                                @Html.LabelFor(m => m.PaymentMethods[i].IsSelected, Model.PaymentMethods[i].PaymentMethod.ToString())
                                @Html.HiddenFor(m => m.PaymentMethods[i].PaymentMethod)
                            </div>
                        }
                    </div>
                </div>
                <div class="info-item">
                    <div class="info-item-title">
                        <h5>Delivery maximum time: </h5>
                    </div>
                    <div class="info-item-content">
                        <span class="is-visible inline to-edit" id="display-deliverymaxtime">@Model.DeliveryMaxTime</span>
                        <span class="is-visible inline to-edit"> min</span>
                        <input class="info-input non-visible to-edit" asp-for="DeliveryMaxTime" type="time" id="edit-deliverymaxtime" />
                        <span class="non-visible to-edit"> min</span>
                    </div>
                </div>
                <div class="info-item last-item">
                    <div class="info-item-title">
                        <h5>Order time: </h5>
                    </div>
                    <div class="info-item-content">
                        <span class="is-visible inline to-edit" id="display-ordertimebegin">@(Model.OrderTimeBegin)</span>
                        <span class="is-visible inline to-edit">-</span>
                        <span class="is-visible inline to-edit" id="display-ordertimeend">@(Model.OrderTimeEnd)</span>
                        <input class="info-input non-visible to-edit" asp-for="OrderTimeBegin" type="time" id="edit-ordertimebegin" />
                        <span class="non-visible to-edit">-</span>
                        <input class="info-input non-visible to-edit" asp-for="OrderTimeEnd" type="time" id="edit-ordertimeend" />
                    </div>
                </div>
            </div>
        </div>
        <div class="edit-div">
            <button class="btn btn-primary to-edit is-visible inline" form="" onclick="setEditModeIndex()">Edit ✏️</button>
            <button class="btn btn-primary to-edit non-visible" form="form-update-restaurant">Save 💾</button>
            <button class="btn btn-light to-edit non-visible" form="" onclick="setSaveModeIndex()">Decline ✖</button>
        </div>

    </form>
</div>
